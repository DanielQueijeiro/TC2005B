<%- include('includes/head.ejs' , 
{username: username, permisos: permisos})%>

<main>
    <section class="hero">
    <div class="hero-body">
      <h1 class="title">Bienvenidos a la Pizzeria!</h1>
      <h1 class="subtitle">En nuestra página podrás crear tus propias pizza para luego ordenarlas y recogerlas en cualquiera de nuestras sucursales :)</h1>
      <img class="" src="https://homebuddy.store/cdn/shop/articles/store_bought_pizza_dough_1024x.jpg?v=1616055784" height="360" width="500">
      <div class="content">
        <h1 class="title mt-4">Preguntas Lab 24</h1>
        <p class="subtitle has-text-weight-bold">¿Qué importancia tiene AJAX en el desarrollo de RIA's (Rich Internet Applications)?</p>
        <ul>
          <li>
            Interactividad en tiempo real: AJAX permite a las aplicaciones web actualizar partes específicas de una página sin necesidad de recargar la página completa. Esto permite una experiencia de usuario más fluida y dinámica, similar a las aplicaciones de escritorio.
          </li>
          <li>
            Mejora de la velocidad de carga: Al cargar solo los datos necesarios y actualizar partes específicas de una página, AJAX puede reducir la cantidad de datos transferidos entre el cliente y el servidor, lo que resulta en tiempos de carga más rápidos para los usuarios.
          </li>
          <li>
            Menor uso de ancho de banda: Al cargar solo los datos necesarios, AJAX puede reducir el uso de ancho de banda en comparación con los enfoques tradicionales de carga de páginas completas, lo que puede ser especialmente beneficioso para usuarios con conexiones a Internet lentas o limitadas.
          </li>
        </ul>
        <p class="subtitle has-text-weight-bold">¿Qué implicaciones de seguridad tiene AJAX? ¿Dónde se deben hacer las validaciones de seguridad, del lado del cliente o del lado del servidor?</p>
            <p>El uso de AJAX en aplicaciones web introduce algunas consideraciones de seguridad adicionales debido a la naturaleza asincrónica de las solicitudes y respuestas.</p>
            <ul>
              <li>
                Cross-Site Scripting (XSS): AJAX puede ser vulnerable a ataques de XSS si no se sanitizan adecuadamente los datos antes de ser renderizados en el navegador. Es fundamental validar y filtrar todos los datos provenientes del cliente, tanto en el lado del cliente como en el servidor, para prevenir este tipo de ataques. Las herramientas de sanitización y la codificación adecuada de datos son esenciales para mitigar este riesgo.
              </li>
              <li>
                Cross-Site Request Forgery (CSRF): Las solicitudes AJAX pueden ser vulnerables a ataques CSRF si no se implementan medidas de protección adecuadas, como tokens anti-CSRF. Estos tokens deben ser generados en el servidor y luego incluidos en las solicitudes AJAX como parte de la validación del lado del servidor.
              </li>
              <li>
                Validación de entrada de datos: Cualquier dato enviado desde el cliente al servidor a través de solicitudes AJAX debe ser validado y sanitizado en el lado del servidor para prevenir ataques de inyección de código, como SQL Injection u otros tipos de inyección de código.
              </li>
            </ul>
            <p class="subtitle has-text-weight-bold">¿Qué es JSON?</p>
            <p>JSON (JavaScript Object Notation) es un formato de intercambio de datos ligero y legible por humanos que se utiliza comúnmente para transmitir datos estructurados entre un servidor y un cliente en aplicaciones web</p>
            <ul>
              <li>
                Estructura de datos: JSON permite representar datos estructurados utilizando objetos y matrices. Los objetos se definen entre llaves {}, mientras que las matrices se definen entre corchetes []. Dentro de estos objetos y matrices, se pueden incluir pares de nombre/valor separados por dos puntos :.
              </li>
              <li>
                Tipos de datos: JSON admite varios tipos de datos, incluyendo cadenas de texto, números, booleanos, objetos, matrices y valores nulos. Estos tipos de datos se pueden anidar para representar estructuras de datos más complejas.
              </li>
              <li>
                Legibilidad humana: La sintaxis de JSON está diseñada para ser legible por humanos y fácil de entender, lo que lo hace útil tanto para los desarrolladores como para las aplicaciones que consumen y generan datos en este formato.
              </li>
            </ul>
    </div>
    </section>

<%- include('includes/foot.ejs') %>